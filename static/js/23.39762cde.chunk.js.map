{"version":3,"file":"static/js/23.39762cde.chunk.js","mappings":"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","sources":["../node_modules/react-tsparticles/esm/Utils.js","../node_modules/react-tsparticles/esm/Particles.js","../node_modules/react-tsparticles/esm/index.js"],"sourcesContent":["const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { deepCompare } from \"./Utils\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;\n        return (nextProps.url !== this.props.url ||\n            nextProps.id !== this.props.id ||\n            nextProps.canvasClassName !== this.props.canvasClassName ||\n            nextProps.className !== this.props.className ||\n            nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width ||\n            !deepCompare(nextProps.style, this.props.style) ||\n            nextProps.init !== this.props.init ||\n            nextProps.loaded !== this.props.loaded ||\n            !deepCompare(nextOptions, currentOptions, key => key.startsWith(\"_\")));\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await tsParticles.load({\n            url: this.props.url,\n            id,\n            options: this.props.options ?? this.props.params,\n        });\n        if (this.props.container) {\n            this.props.container.current = container;\n        }\n        this.setState({\n            library: container,\n        });\n        if (this.props.loaded) {\n            await this.props.loaded(container);\n        }\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n"],"names":["isObject","val","deepCompare","obj1","obj2","excludeKeyFn","arguments","length","undefined","keys1","Object","keys","filter","key","keys2","value1","value2","Array","isArray","deepCompareArrays","arr1","arr2","i","val1","val2","defaultId","Particles","Component","constructor","props","super","this","state","init","library","destroy","setState","shouldComponentUpdate","nextProps","_nextProps$options","_this$props$options","nextOptions","options","params","currentOptions","url","id","canvasClassName","className","height","width","style","loaded","startsWith","componentDidUpdate","refresh","forceUpdate","then","componentDidMount","tsParticles","async","loadParticles","componentWillUnmount","render","React","_objectSpread","_ref","_this$props$id","_this$props$options2","defaultProps","container","load","current"],"sourceRoot":""}